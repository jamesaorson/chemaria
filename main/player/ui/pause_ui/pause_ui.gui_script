local globals = require "modules.globals"
local gooey = require "gooey.gooey"
local helpers = require "modules.helpers"
local input_constants = require "modules.constants.input"
local item_constants = require "modules.constants.items"
local message_constants = require "modules.constants.messages"
local recipes = require "modules.constants.recipes"
local theme = require "main.ui.theme"

local INPUT_FOCUS = hash("blue_button05")
local INPUT = hash("blue_button03")

local BUTTON_PRESSED = hash("button_pressed")
local BUTTON = hash("button_idle")

local SCOPED_SELF

-------------
-- Helpers --
-------------

local button_handler
local update_pause_ui

function button_handler(button, handler)
	if button.released_now then
		handler()
	end
end

function update_pause_ui(self)
	if self.isPauseUiEnabled then
		gooey.acquire_input()
	else
		gooey.release_input()
	end
	gui.set_enabled(gui.get_node("pause_ui"), self.isPauseUiEnabled)
	self.shouldUpdatePauseUi = false
end

function update_save_input(self)
	gui.set_enabled(gui.get_node("save_input_node"), self.isSaveInputEnabled)
	self.shouldUpdateSaveInput = false
end

-----------------
-- End Helpers --
-----------------


----------------------
-- Defold functions --
----------------------

function init(self)
	SCOPED_SELF = self
	self.isPauseUiEnabled = false
	self.shouldUpdatePauseUi = true
	self.isSaveInputEnabled = false
	self.shouldUpdateSaveInput = true
	update_pause_ui(self)
	update_save_input(self)
end

function on_input(self, actionId, action)
	theme.button("save_button", actionId, action, function(button)
		button_handler(button, function()
			save_input_text = gui.get_text(gui.get_node("save_input/text"))
			if string.len(save_input_text) > 0 then
				globals.saveFileName = save_input_text
			end
			if globals.saveFileName then
				msg.post("/player#player_script", message_constants.SAVE_GAME, {})
				msg.post("/player#player_script", input_constants.TOGGLE_PAUSE_MENU, {})
				self.shouldUpdatePauseUi = true
				self.isSaveInputEnabled = false
				self.shouldUpdateSaveInput = true
			else
				self.isSaveInputEnabled = true
				self.shouldUpdateSaveInput = true
			end
		end)
	end)

	theme.button("exit_button", actionId, action, function(button)
		button_handler(button, function()
			msg.post("/player#player_script", message_constants.QUIT_GAME, {})
		end)
	end)

	theme.input("save_input", gui.KEYBOARD_TYPE_DEFAULT, actionId, action, {
		max_length = 32,
		empty_text = "Enter save file name...",
		allowed_characters = "[%w%s-_]"
	})
end

function on_message(self, messageId, message, sender)
	if messageId == input_constants.TOGGLE_PAUSE_MENU then
		self.isPauseUiEnabled = not self.isPauseUiEnabled
		self.shouldUpdatePauseUi = true
	end
end

function update(self, dt)
	if self.shouldUpdatePauseUi then
		update_pause_ui(self)
	end
	if self.shouldUpdateSaveInput then
		update_save_input(self)
	end
end

--------------------------
-- End Defold functions --
--------------------------
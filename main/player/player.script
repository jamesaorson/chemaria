local constants = require "modules.constants"
local platypus = require "platypus.platypus"
local rendercam = require "rendercam.rendercam"

local PLATYPUS_CONFIG = {
	collisions = {
		separation = platypus.SEPARATION_SHAPES,
		groups = {
			[hash("block")] = platypus.DIR_ALL
		},
		left = constants.PLAYER_WIDTH / 2, right = constants.PLAYER_WIDTH / 2, top = constants.PLAYER_HEIGHT / 2, bottom = constants.PLAYER_HEIGHT / 2
	},
	gravity = constants.GRAVITY,
	max_velocity = constants.PLAYER_MAX_VELOCITY,
	allow_double_jump = true,
	allow_wall_jump = false
}

function init(self)
	self.platypus = platypus.create(PLATYPUS_CONFIG)
	self.selectedToolbarItem = 1
	self.isMining = false
	self.miningStartTime = nil
	self.toolbar = {}
end

function update(self, dt)
	self.platypus.update(dt)
end

function on_message(self, messageId, message, sender)
	self.platypus.on_message(messageId, message)
	if messageId == hash("left") then
		self.platypus.left(constants.PLAYER_VELOCITY.x)
	elseif messageId == hash("right") then
		self.platypus.right(constants.PLAYER_VELOCITY.x)
	elseif messageId == hash("jump") then
		if message.pressed then
			self.platypus.jump(constants.PLAYER_JUMP_FORCE)
		elseif message.released then
			self.platypus.abort_jump(0.5)
		end
	elseif messageId == hash("left_click") then
		if message.pressed then
			self.isMining = true
			self.miningStartTime = os.clock()
		elseif message.released then
			self.isMining = false
			self.mininStartTime = nil
		else
			local miningTime = os.clock() - self.miningStartTime
			if miningTime >= constants.PLAYER_BASE_MINING_INTERVAL then
				self.miningStartTime = os.clock()
				msg.post("/world#world_script", "mine_block", message)
			end
		end
	elseif messageId == hash("right_click") then
		message.type = 
		msg.post("/world#world_script", "place_block", message)
	elseif messageId == hash("update_toolbar_item") then
		self.toolbar[message.index] = message
	elseif messageId == hash("switch_selected_toolbar_item") then
		self.selectedToolbarItem = message.toolbarIndex
	end
end
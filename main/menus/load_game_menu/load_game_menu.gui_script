local config = require "modules.config"
local globals = require "modules.globals"
local gooey = require "gooey.gooey"
local theme = require "main.menus.theme.theme"

local SCOPED_SELF


local LISTITEM_SELECTED = hash("button_pressed")
local LISTITEM_PRESSED = hash("button_pressed")
local LISTITEM_DISABLED = hash("button_disabled")
local LISTITEM = hash("button_idle")

local SAVE_FILE_EXTENSION = ".json"

-------------
-- Helpers --
-------------

local button_handler
local fill_save_list
local on_item_selected
local update_list_item
local update_save_list

function button_handler(button, handler)
	if button.released_now then
		handler()
	end
end

function fill_save_list(self, actionId, action)
	self.scrollbar = gooey.vertical_scrollbar("scrollbar/handle", "scrollbar/bounds", actionId, action, function () end)
	gooey.dynamic_list("save_list", "save_list/stencil", "save_list/listitem_bg", self.saveFiles, actionId, action, on_item_selected, update_save_list).scroll_to(0, self.scrollbar.scroll.y)
end

function on_item_selected(list)
	SCOPED_SELF.selectedSave = list.items[list.selected_item].data
	print(SCOPED_SELF.selectedSave)
end

function update_list_item(list, item)
	local pos = gui.get_position(item.root)
	if item.index == list.selected_item then
		gui.play_flipbook(item.root, LISTITEM_PRESSED)
	elseif item.index == list.pressed_item then
		gui.play_flipbook(item.root, LISTITEM_PRESSED)
	elseif item.index == list.over_item_now then
		gui.play_flipbook(item.root, LISTITEM)
	elseif item.index == list.out_item_now then
		gui.play_flipbook(item.root, LISTITEM)
	elseif item.index ~= list.over_item then
		gui.play_flipbook(item.root, LISTITEM)
	end
	gui.set_position(item.root, pos)
end

function update_save_list(list)
	local itemTextId = hash("save_list/listitem_text")
	for key, item in pairs(list.items) do
		update_list_item(list, item)
		if item.data ~= nil then
			i, _ = string.find(item.data, SAVE_FILE_EXTENSION)
			gui.set_text(item.nodes[itemTextId], string.sub(item.data, 1, i - 1))
		end
	end
end

-----------------
-- End Helpers --
-----------------

----------------------
-- Defold functions --
----------------------

function init(self)
	gooey.acquire_input()
	SCOPED_SELF = self
	self.saveFiles = {}
	self.scrollbar = nil
	self.selectedSave = nil

	iter, directory = lfs.dir(sys.get_save_file(config.APPNAME, ""))
	currentFileName = iter(directory)
	while currentFileName ~= nil do
		i, j = string.find(currentFileName, SAVE_FILE_EXTENSION)
		if i ~= nil then
			if j == string.len(currentFileName) then
				table.insert(self.saveFiles, currentFileName)
			end
		end
		currentFileName = iter(directory)
	end

	fill_save_list(self)
end

function on_input(self, actionId, action)
	theme.button("load_game", actionId, action, function(button)
		if SCOPED_SELF.selectedSave ~= nil then
			button_handler(button, function()
				globals.saveFileName = SCOPED_SELF.selectedSave
				msg.post("main:/loader#loader", "switch_proxy", { switchTo = "#world_proxy" })
			end)
		end
	end)
	theme.button("return_to_main_menu", actionId, action, function(button)
		button_handler(button, function()
			msg.post("main:/loader#loader", "switch_proxy", { switchTo = "#main_menu_proxy" })
		end)
	end)
	fill_save_list(self, actionId, action)
end

--------------------------
-- End Defold functions --
--------------------------
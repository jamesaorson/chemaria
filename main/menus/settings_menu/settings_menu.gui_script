local helpers = require "modules.helpers"
local gooey = require "gooey.gooey"
local input_constants = require "modules.constants.input"
local theme = require "main.ui.theme"

local SCOPED_SELF

-------------
-- Helpers --
-------------

local button_handler
local checkbox_handler
local exit_to_main_menu

function button_handler(button, handler)
	if button.released_now then
		handler()
	end
end

function checkbox_handler(checkbox, handler)
	if checkbox.released_now then
		handler()
	end
end

function exit_to_main_menu(self)
	-- helpers.set_config_data("FULLSCREEN", self.fullscreen)
	helpers.set_config_data("FULLSCREEN", true)

	helpers.set_config_data("VSYNC", self.vsync)

	local zoom_level = tonumber(gui.get_text(gui.get_node("zoom_input/text")))
	if zoom_level and zoom_level >= self.minimum_zoom and zoom_level <= self.maximum_zoom then
		helpers.set_config_data(
			"CAMERA_ZOOM_LEVEL",
			{
				zoom = zoom_level
			}
		)
	end

	helpers.switch_proxy("#main_menu_proxy")
end

-----------------
-- End Helpers --
-----------------

----------------------
-- Defold functions --
----------------------

function init(self)
	SCOPED_SELF = self

	helpers.init_config_data()
	gooey.acquire_input()

	self.fullscreen = helpers.get_config_data("FULLSCREEN")
	theme.checkbox("fullscreen_checkbox").set_checked(self.fullscreen)
	gui.set_enabled(gui.get_node("fullscreen"), false)

	self.vsync = helpers.get_config_data("VSYNC")
	theme.checkbox("vsync_checkbox").set_checked(self.vsync)
	
	self.current_zoom = helpers.get_config_data("CAMERA_ZOOM_LEVEL").zoom
	self.minimum_zoom = 1
	self.maximum_zoom = 3
	self.zoom_label = self.minimum_zoom .. " to " .. self.maximum_zoom
	gui.set_text(gui.get_node("current_zoom_label"), "Current Zoom: " .. self.current_zoom)
	gui.set_text(gui.get_node("zoom_input/text"), self.zoom_label)
	gui.set_enabled(gui.get_node("zoom_input/cursor"), false)
end

function on_input(self, action_id, action)
	if action_id == input_constants.QUIT and action.released then
		exit_to_main_menu(self)
	end

	theme.button("return_to_main_menu", action_id, action, function(button)
		button_handler(button, function()
			exit_to_main_menu(SCOPED_SELF)
		end)
	end)

	theme.checkbox("fullscreen_checkbox", action_id, action, function(checkbox)
		checkbox_handler(checkbox, function()
			SCOPED_SELF.fullscreen = checkbox.checked
		end)
	end)

	theme.checkbox("vsync_checkbox", action_id, action, function(checkbox)
		checkbox_handler(checkbox, function()
			SCOPED_SELF.vsync = checkbox.checked
		end)
	end)

	theme.input("zoom_input", gui.KEYBOARD_TYPE_NUMBER_PAD, action_id, action, {
		max_length = 4,
		empty_text = SCOPED_SELF.zoom_label,
		allowed_characters = "[%d%.]"
	})
end

function final(self)
	gooey.release_input()
	helpers.save_config_data()
	helpers.apply_config()
end

--------------------------
-- End Defold functions --
--------------------------
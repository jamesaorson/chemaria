local helpers = require "modules.helpers"
local gooey = require "gooey.gooey"
local input_constants = require "modules.constants.input"
local theme = require "main.ui.theme"

-------------
-- Helpers --
-------------

local button_handler
local exit_to_main_menu

function button_handler(button, handler)
	if button.released_now then
		handler()
	end
end

function exit_to_main_menu()
	zoomLevel = tonumber(gui.get_text(gui.get_node("zoom_input/text")))
	if zoomLevel and zoomLevel >= 0.5 and zoomLevel <= 3 then
		helpers.set_config_data("CAMERA_ZOOM_LEVEL", { zoom = zoomLevel})
	end
	msg.post("main:/loader#loader", "switch_proxy", { switchTo = "#main_menu_proxy" })
end

-----------------
-- End Helpers --
-----------------

----------------------
-- Defold functions --
----------------------

function init(self)
	helpers.init_config_data()
	gooey.acquire_input()
	
	self.currentZoom = helpers.get_config_data("CAMERA_ZOOM_LEVEL").zoom
	self.minZoom = 1
	self.maxZoom = 3
	self.zoomLabel = self.minZoom .. " to " .. self.maxZoom

	gui.set_text(gui.get_node("current_zoom_label"), "Current Zoom: " .. self.currentZoom)
	gui.set_text(gui.get_node("zoom_input/text"), self.zoomLabel)
	gui.set_enabled(gui.get_node("zoom_input/cursor"), false)
end

function on_input(self, actionId, action)
	if actionId == input_constants.QUIT and action.released then
		exit_to_main_menu()
	end

	theme.button("return_to_main_menu", actionId, action, function(button)
		button_handler(button, function()
			exit_to_main_menu()
		end)
	end)

	theme.input("zoom_input", gui.KEYBOARD_TYPE_NUMBER_PAD, actionId, action, {
		max_length = 4,
		empty_text = self.zoomLabel,
		allowed_characters = "[%d%.]"
	})
end

function final(self)
	gooey.release_input()
	helpers.save_config_data()
end

--------------------------
-- End Defold functions --
--------------------------
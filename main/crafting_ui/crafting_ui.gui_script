local gooey = require "gooey.gooey"
local item_constants = require "modules.constants.items"
local recipes = require "modules.constants.recipes"
local theme = require "main.crafting_ui.crafting_ui_theme.theme"

-------------
-- Helpers --
-------------

local button_handler
local dynamic_list_handler
local fill_crafting_list
local on_item_selected
local update_crafting_ui
local update_crafting_list

function button_handler(button, handler)
	if button.released_now then
		handler()
	end
end

function dynamic_list_handler(list)
	
end

function fill_crafting_list()
	local listItems = {}
	for i, recipe in pairs(recipes) do
		table.insert(listItems, { itemId = recipe.itemId, components = recipe.components })
	end
	gooey.dynamic_list("crafting_list", "crafting_list/stencil", "crafting_list/listitem_bg", listItems, actionId, action, on_item_selected, update_crafting_list)
end

function on_item_selected(list)
	print("selected", list.selected_item)
end

function update_crafting_list(list)
	for key, item in pairs(list.items) do
		if item.data ~= nil and item.data.itemId ~= nil then
			gui.set_text(item.nodes[hash("crafting_list/listitem_text")], item_constants.ALL_ITEMS[item.data.itemId].displayName)
		end
	end
end

function update_crafting_ui(self)
	if self.isCraftingUiEnabled then
		gooey.acquire_input()
	else
		gooey.release_input()
	end
	gui.set_enabled(gui.get_node("crafting_ui"), self.isCraftingUiEnabled)
	self.shouldUpdateCraftingUi = false
end

-----------------
-- End Helpers --
-----------------


----------------------
-- Defold functions --
----------------------

function init(self)
	self.isCraftingUiEnabled = false
	self.shouldUpdateCraftingUi = false
	gui.set_enabled(gui.get_node("crafting_ui"), self.isCraftingUiEnabled)
	fill_crafting_list()
end

function on_input(self, actionId, action)
	if actionId == hash("quit") and action.released then
		--theme.button("new_game", actionId, action, function(button)
		--button_handler(button, function() 
		--msg.post("main:/loader#loader", "switch_proxy", { switchTo = "#worldproxy" })
		--end)
		--end)
		self.isCraftingUiEnabled = false
		self.shouldUpdateCraftingUi = true
	elseif actionId == hash("left_click") and action.released then
		fill_crafting_list()
	end
end

function on_message(self, messageId, message, sender)
	if messageId == hash("toggle_crafting_menu") then
		self.isCraftingUiEnabled = not self.isCraftingUiEnabled
		self.shouldUpdateCraftingUi = true
	end
end

function update(self, dt)
	if self.shouldUpdateCraftingUi then
		update_crafting_ui(self)
	end
end

--------------------------
-- End Defold functions --
--------------------------